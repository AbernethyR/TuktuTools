% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/removeOutliers.R
\name{removeOutliers}
\alias{removeOutliers}
\title{Remove almost duplicated timestamp}
\usage{
removeOutliers(df, steps = 10)
}
\arguments{
\item{df}{a data frame containing columns: ID as individual identifiant,
x and y: relocations of individuals (in a metric system)
Time: vector (of class POSIXct)}

\item{steps}{if specified, the number of cleaning steps to be performed (default is 10)}
}
\value{
The function returns adds a column "outlier". If TRUE, it means that 
the location has been identified as an outlier.
}
\description{
Function to remove almost duplicated timestamp.
It appears that sometimes, the GPS device relocate at 1 or 2
minute interval. However, the GPS devices are configured to
relocate every day, 8-hours or every hour for some
individuals, at fix hours (e.g. 0:00 am, 8:00 am or 4:00 pm).
In addition, it is biologically impossible that the animal
moves several kilometers in one minute. Thus, the relocations
having a time interval in the order of minutes or very high
movement rates are more prone
to be 'outliers'.
}
\details{
I noted that sometimes there could be several subsequent "outliers"
thus the cleaning function is repeated several times until there are no "outliers" anymore
}
\examples{
require(TuktuTools)

data(caribou)

# flag outliers
caribou.cleaned <- removeOutliers(caribou)

head(caribou.cleaned)

table(caribou.cleaned$outlier)

# visualize 
ggplot(data=caribou.cleaned, aes(x=x, y = y)) + geom_path() + 
  geom_point(data= caribou.cleaned \%>\% subset(outlier == "TRUE"), aes(colour=factor(outlier))) + 
  facet_wrap(~ID, scales = "free")


which(caribou.cleaned$outlier == "TRUE") # [1] 12263 12326 13394 13689

# check those locations
caribou.cleaned[12262:12264,] # one minute interval

caribou.cleaned[12325:12327,] # one minute interval

caribou.cleaned[13393:13395,] # one minute interval

caribou.cleaned[13687:13690,] # one minute interval
}
