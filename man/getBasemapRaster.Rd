% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getBasemapRaster.R
\name{getBasemapRaster}
\alias{getBasemapRaster}
\title{getBasemapRaster}
\usage{
getBasemapRaster(
  x,
  xmax = NULL,
  ymin = NULL,
  ymax = NULL,
  map.types = "Esri.WorldPhysical",
  directory = ".",
  filename = "basemap",
  width = 1000,
  height = 1000,
  zoom = 1,
  plotme = FALSE,
  output_crs = "+init=epsg:3857",
  ...
)
}
\arguments{
\item{x}{Either the xmin limit of longitude, or a bbox from a spatial object.}

\item{map.types}{Character specification for the base maps. see http://leaflet-extras.github.io/leaflet-providers/preview/ for available options. Favorites include: \code{Esri.WorldPhysical} (default), \code{Esri.WorldTerrain}, \code{Esri.NatGeoWorldMap}}

\item{directory}{directory to save the html and png files}

\item{filename}{name of png and html files}

\item{zoom}{this is the zoom argument from \code{\link{webshot}}; it also has some complicated 
effect on the resolution of the final image.}

\item{plotme}{whether or not to plot the raster with \code{\link{plotRGB}}. Note that high 
resolution rasters are reduced in rendering within R by default ... this can be modified 
with \code{\link{plotRGB}} options.}

\item{output_crs}{output coordinate reference system, defiend as a proj4string text.}

\item{{xmax, ymin, ymax}}{Limits (in longitude and latitude) of desired map raster. Only used if
`x` is not a bbox.}

\item{{width, height}}{approximate width and height of final raster; this is VERY approximate 
because the final raster is cropped around the desired limits and because there is some}
}
\value{
An RGB raster, i.e. one with three levels for each of the colors. Note, the projection of the returned raster 
is the Spherical Mercator (EPSG:3857) - used for global tiling and "native" to mapview (and leaflet).
}
\description{
This function obtains an RGB raster from any of the available base maps in the (incredible!) 
open source leaflet package.  It is meant to replace - in a way - the \code{\link{ggmap}} 
function, which now requires an API key with Google.  It is in some ways more flexible: you 
can set the lat and long limits strictly, it returns a projected raster which can be reprojected 
to any other resolution, and it can access any of the remarkable diversity of high quality 
mapping option at:  http://leaflet-extras.github.io/leaflet-providers/preview/.  Note that it 
creates a "png" and "html" and places it in a given directory, and does not delete them.
}
\examples{
require(moveVis)
require(TuktuTools)
require(slippymath)
require(pbapply)
require(curl)
require(magick)

data("caribou")
b <- caribou \%>\% st_as_sf(coords=c("Lon", "Lat"), crs = 4326)

gg.ext <- st_bbox(b)
dir.create("basemap")

a <- getBasemapRaster(gg.ext)

b_lines <- b \%>\% group_by(ID, Year) \%>\%
  summarize(do_union=FALSE) \%>\% st_cast("LINESTRING")

plotRGB(a)
plot(st_geometry(b_lines \%>\% st_transform(crs(a[[1]]))), add = TRUE, col = 1:nrow(b), cex = 2)
}
